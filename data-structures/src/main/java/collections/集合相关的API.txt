Collections.sort();           使用特定比较方式对集合元素进行排序
Collections.swap();           交换Array中的两个值，或者泛型List中的两个值 !
Collections.reverse();        颠倒list中存储对象的地址的顺序 !
Collections.shuffle();        随机洗牌
Collections.binarySearch(, ); 对集合元素进行二分法查找

Collections.unmodifiable...() 返回一个不可变的View视图(read-only只读形式)
  Collections.unmodifiableList()
  Collections.unmodifiableMap()
  Collections.unmodifiableSortedMap()
  Collections.unmodifiableSet()
  Collections.unmodifiableSortedSet()

Collections.copy(List<? super T> dest, List<? extends T> src) {}
  由于存在限制的初始化要求，所以不推荐使用该方法
  1. dest可以是T的父类以上类型，而src源list必须是一个具体的List
  2. dest的集合可容纳的对象长度必须大于等于src提供的长度
  3. 在copy时，当T类型为不可变类型，则表现为Deep Copy
  4. 在copy时，当T类型为可变类型，则表现为Shadow Copy